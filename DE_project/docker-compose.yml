version: '3.7'

# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=False
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True

x-airflow-image: &airflow_image apache/airflow:2.0.0-python3.8
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - ./mnt/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  init:
#    image: *airflow_image
    build: .
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'

  webserver:
#    image: *airflow_image
    build: .
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
    environment: *airflow_environment
    command: webserver
    healthcheck:
      test: [ "CMD", "nc", "-z", "airflow", "8080" ]
      timeout: 45s
      interval: 10s
      retries: 10

  scheduler:
#    image: *airflow_image
    build: .
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - logs:/opt/airflow/logs
      - ./dags:/opt/airflow/dags
    environment: *airflow_environment
    command: scheduler

  minio:
      image: minio/minio:latest
      container_name: minio
      restart: always
      environment:
          MINIO_ACCESS_KEY: "MINIO_ACCESS_KEY"
          MINIO_SECRET_KEY: "MINIO_SECRET_KEY"
      volumes:
          - ./mnt/s3_data:/data
      ports:
      - "9000:9000"
      - "9001:9001"
      command: minio server /data --console-address ":9001"

  metabase-app:
    image: metabase/metabase
    restart: always
    ports:
      - "3001:3000"
    #        volumes:
    #          # declare your mount volume /host/dir:/container/dir
    #          - /home/app/metabase-data:/metabase-data
    environment:
      MB_DB_TYPE: postgres
      MB_DB_DBNAME: tmdb
      MB_DB_PORT: 5432
      MB_DB_USER: airflow
      MB_DB_PASS: airflow
      MB_DB_HOST: postgres
    depends_on:
      - postgres
    links:
      - postgres

volumes:
  logs:


